<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop         
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	">

	<bean id="person" class="com.designpattern.proxy.impl.Person" />
	<bean id="personProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<ref local="person" />
		</property>
	</bean>

	<aop:config proxy-target-class="true">
		<aop:pointcut id="pointcut"
			expression="execution(* com.designpattern.proxy.impl.Person.*(..))" />
		<!-- execution(modifiers-pattern? ret-type-pattern declaring-type-pattern? 
			name-pattern(param-pattern)throws-pattern?) returning type pattern,name pattern, 
			and parameters pattern是必须的. ret-type-pattern:可以为*表示任何返回值,全路径的类名等. name-pattern:指定方法名,*代表所有,set*,代表以set开头的所有方法. 
			parameters pattern:指定方法参数(声明的类型),(..)代表所有参数,(*)代表一个参数,(*,String)代表第一个参数为任何值,第二个为String类型. -->
		<aop:advisor advice-ref="beforeAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<bean id="beforeAdvice" class="com.spring.aop.Aspect"></bean>
</beans>
